[{"path":[]},{"path":"https://simonpcouch.github.io/clipal/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://simonpcouch.github.io/clipal/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://simonpcouch.github.io/clipal/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://simonpcouch.github.io/clipal/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://simonpcouch.github.io/clipal/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://simonpcouch.github.io/clipal/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://simonpcouch.github.io/clipal/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://simonpcouch.github.io/clipal/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://simonpcouch.github.io/clipal/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://simonpcouch.github.io/clipal/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://simonpcouch.github.io/clipal/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://simonpcouch.github.io/clipal/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to clipal","title":"Contributing to clipal","text":"outlines propose change clipal. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://simonpcouch.github.io/clipal/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to clipal","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://simonpcouch.github.io/clipal/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to clipal","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://simonpcouch.github.io/clipal/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to clipal","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"simonpcouch/clipal\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://simonpcouch.github.io/clipal/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to clipal","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://simonpcouch.github.io/clipal/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to clipal","text":"Please note clipal project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://simonpcouch.github.io/clipal/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 clipal authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://simonpcouch.github.io/clipal/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with clipal","title":"Getting help with clipal","text":"Thanks using clipal! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://simonpcouch.github.io/clipal/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with clipal","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://simonpcouch.github.io/clipal/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with clipal","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://simonpcouch.github.io/clipal/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with clipal","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://simonpcouch.github.io/clipal/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon Couch. Author, maintainer.","code":""},{"path":"https://simonpcouch.github.io/clipal/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Couch S (2024). clipal: Convert cli errors. R package version 0.0.1, https://simonpcouch.github.io/clipal/, https://github.com/simonpcouch/clipal.","code":"@Manual{,   title = {clipal: Convert to cli errors},   author = {Simon Couch},   year = {2024},   note = {R package version 0.0.1, https://simonpcouch.github.io/clipal/},   url = {https://github.com/simonpcouch/clipal}, }"},{"path":"https://simonpcouch.github.io/clipal/index.html","id":"your-cli-pal-","dir":"","previous_headings":"","what":"Convert to cli errors","title":"Convert to cli errors","text":"couple years ago, tidyverse team began migrating cli R package raising errors, transitioning away base R (e.g. stop()), rlang (e.g. rlang::abort()), glue, homegrown combinations . cli’s new syntax easier work developer visually pleasing user. cases, transitioning simple Finding + Replacing rlang::abort() cli::cli_abort(). others, ’s mess ad-hoc pluralization, paste0()s, glue interpolations, assorted nonsense sort . Total pain, especially thousands upon thousands error messages thrown across tidyverse, r-lib, tidymodels organizations. clipal (“c-l-pal”) RStudio add-helps convert R package use cli error messages. ’s vaguely correct time, greatly speeds process converting error messages cli, experience.","code":""},{"path":"https://simonpcouch.github.io/clipal/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Convert to cli errors","text":"can install clipal like : , Ensure ANTHROPIC_API_KEY set .env. ’d like use LLM Anthropic’s Claude 3.5 Sonnet power cli pal, see ?cli_pal() set default metadata model. Assign “Convert cli” addin shortcut “Ctrl+Shift+C”. (See instructions needed!)","code":"pak::pak(\"simonpcouch/clipal\")"},{"path":"https://simonpcouch.github.io/clipal/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Convert to cli errors","text":"package provides RStudio add-“Convert cli” suggest registering keybinding “Ctrl+Shift+C”. , navigate Tools > Modify Keyboard Shortcuts > Search “Convert cli”, add keybinding. selecting code, press keyboard shortcut wait moment:  See Gallery varied set examples.","code":""},{"path":"https://simonpcouch.github.io/clipal/index.html","id":"cost","dir":"","previous_headings":"","what":"Cost","title":"Convert to cli errors","text":"system prompt cli pal includes something like 4,000 tokens. Add (generous) 100 tokens code ’s actually highlighted also sent model ’re looking 4,100 input tokens. model returns approximately number output tokens receives, ’ll call 100 output tokens per refactor. time writing (October 2024), default clipal model Claude Sonnet 3.5 costs $3 per million input tokens $15 per million output tokens. , using default model, cli pals cost around $15 every 1,000 refactored pieces code. GPT-4o Mini, contrast, doesn’t tend get cli markup classes right return syntactically valid calls cli functions, cost around 75 cents per 1,000 refactored pieces code.","code":""},{"path":"https://simonpcouch.github.io/clipal/index.html","id":"gallery","dir":"","previous_headings":"","what":"Gallery","title":"Convert to cli errors","text":"section include handful examples “wild” generated default model, Claude Sonnet 3.5. cli_pal() function instantiates cli pal light wrapper around functions creating elmer chats. convert_to_cli() function takes R expression raises condition converts use cli. simplest, one-line message little bit markup: function knows look recently defined cli pal, can pass one manually via convert_to_cli(cli_pal) please. strange vector collapsing funky line breaking: message probably best lives two separate elements: Gnarly ad-hoc pluralization: paste0() wonk: model instructed return call cli function, erroring code ’s run conditionally can get borked: Sprintf-style statements aren’t issue:","code":"library(clipal)  cli_pal() #>  #> ── A claude-3-5-sonnet-20240620-based cli pal. convert_to_cli({   rlang::abort(\"`save_pred` can only be used if the initial results saved predictions.\") }) #> cli::cli_abort(\"`save_pred` can only be used if the initial results saved predictions.\") convert_to_cli({   extra_grid_params <- glue::single_quote(extra_grid_params)   extra_grid_params <- glue::glue_collapse(extra_grid_params, sep = \", \")    msg <- glue::glue(     \"The provided `grid` has the following parameter columns that have \",     \"not been marked for tuning by `tune()`: {extra_grid_params}.\"   )    rlang::abort(msg) }) #> cli::cli_abort( #>   \"The provided {.arg grid} has the parameter column{?s}  #>    {.val {extra_grid_params}} that {?has/have} not been marked for tuning  #>    by {.fn tune}.\" #> ) convert_to_cli({   rlang::abort(     paste(       \"Some model parameters require finalization but there are recipe\",       \"parameters that require tuning. Please use \",       \"`extract_parameter_set_dials()` to set parameter ranges \",       \"manually and supply the output to the `param_info` argument.\"     )   ) }) #> cli::cli_abort( #>   c( #>     \"Some model parameters require finalization but there are recipe #>      parameters that require tuning.\", #>     \"i\" = \"Please use {.fn extract_parameter_set_dials} to set parameter #>            ranges manually and supply the output to the {.arg param_info} #>            argument.\" #>   ) #> ) convert_to_cli({   msg <- \"Creating pre-processing data to finalize unknown parameter\"   unk_names <- pset$id[unk]   if (length(unk_names) == 1) {     msg <- paste0(msg, \": \", unk_names)   } else {     msg <- paste0(msg, \"s: \", paste0(\"'\", unk_names, \"'\", collapse = \", \"))   }   rlang::inform(msg) }) #> cli::cli_inform( #>   \"Creating pre-processing data to finalize unknown parameter{?s}: {unk_names}\" #> ) convert_to_cli({   rlang::abort(paste0(     \"The workflow has arguments to be tuned that are missing some \",     \"parameter objects: \",     paste0(\"'\", pset$id[!params], \"'\", collapse = \", \")   )) }) #> cli::cli_abort( #>   \"The workflow has arguments to be tuned that are missing some  #>    parameter objects: {.val {pset$id[!params]}}\" #> ) convert_to_cli({   cls <- paste(cls, collapse = \" or \")   if (!fine) {     msg <- glue::glue(\"Argument '{deparse(cl$x)}' should be a {cls} or NULL\")     if (!is.null(where)) {       msg <- glue::glue(msg, \" in `{where}`\")     }     rlang::abort(msg)   } }) #> cli::cli_abort( #>   \"Argument {.code {deparse(cl$x)}} should be {?a/an} {cls} or NULL{?in {where}}.\" #> ) convert_to_cli({   abort(sprintf(\"No such '%s' function: `%s()`.\", package, name)) }) #> cli::cli_abort(\"No such {.pkg {package}} function: {.fn {name}}.\")"},{"path":"https://simonpcouch.github.io/clipal/reference/cli_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a cli pal — cli_pal","title":"Create a cli pal — cli_pal","text":"light wrapper around elmer chat functions create chat object custom system prompt.","code":""},{"path":"https://simonpcouch.github.io/clipal/reference/cli_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a cli pal — cli_pal","text":"","code":"cli_pal(   fn = getOption(\".clipal_fn\", default = \"new_chat_claude\"),   ...,   .ns = \"elmer\" )"},{"path":"https://simonpcouch.github.io/clipal/reference/cli_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a cli pal — cli_pal","text":"fn new_*() function, likely elmer package. Defaults elmer::new_chat_claude(). set persistent alternative default, set .clipal_fn option; see examples . ... Additional arguments fn. system_prompt argument ignored supplied. set persistent defaults, set .clipal_args option; see examples . .ns package new_*() function exported .","code":""},{"path":"https://simonpcouch.github.io/clipal/reference/cli_pal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a cli pal — cli_pal","text":"Upon successfully creating cli pal, function assign result search path .last_cli_pal. point, convert_to_cli() RStudio add-\"Convert cli\" know look .last_cli_pal need worry passing cli pal . Anthropic API key (another API key clipal_*() options) set package installed, ready using add-R session setup library loading required; addin knows look API credentials call function convert_to_cli() .","code":""},{"path":"https://simonpcouch.github.io/clipal/reference/cli_pal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a cli pal — cli_pal","text":"","code":"if (FALSE) { # to create a chat with claude: clipal()  # or with OpenAI's 4o-mini: clipal(   \"new_chat_openai\",   model = \"gpt-4o-mini\" )  # to set OpenAI's 4o-mini as the default, for example, set the # following options (possibly in your .Rprofile, if you'd like # them to persist across sessions): options(   .clipal_fn = \"new_chat_openai\",   .clipal_args = list(model = \"gpt-4o-mini\") ) }"},{"path":"https://simonpcouch.github.io/clipal/reference/clipal-package.html","id":null,"dir":"Reference","previous_headings":"","what":"clipal: Convert to cli errors — clipal-package","title":"clipal: Convert to cli errors — clipal-package","text":"many interfaces raise errors R years. couple years ago, tidyteam converged using 'cli' package began cumbersome process rewriting erroring code. task difficult one automate, sorts weird edge cases stylistic divergences; \"every unhappy family unhappy way.\" RStudio add-helps convert R code use 'cli' package error messages using LLMs.","code":""},{"path":[]},{"path":"https://simonpcouch.github.io/clipal/reference/clipal-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"clipal: Convert to cli errors — clipal-package","text":"Maintainer: Simon Couch simon.couch@posit.co (ORCID)","code":""},{"path":"https://simonpcouch.github.io/clipal/reference/convert_to_cli.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert erroring code to use cli — convert_to_cli","title":"Convert erroring code to use cli — convert_to_cli","text":"Convert erroring code use cli","code":""},{"path":"https://simonpcouch.github.io/clipal/reference/convert_to_cli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert erroring code to use cli — convert_to_cli","text":"","code":"convert_to_cli(   expr,   cli_pal = if (exists(\".last_cli_pal\")) .last_cli_pal else NULL )"},{"path":"https://simonpcouch.github.io/clipal/reference/convert_to_cli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert erroring code to use cli — convert_to_cli","text":"expr Lines code raise error, expression. cli_pal cli pal created cli_pal().","code":""},{"path":"https://simonpcouch.github.io/clipal/reference/convert_to_cli.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert erroring code to use cli — convert_to_cli","text":"","code":"if (FALSE) { cli_pal <- cli_pal()  convert_to_cli(stop(\"An error message.\")) }"},{"path":"https://simonpcouch.github.io/clipal/reference/dot-stash_last_cli_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Save most recent results to search path — .stash_last_cli_pal","title":"Save most recent results to search path — .stash_last_cli_pal","text":"Save recent results search path","code":""},{"path":"https://simonpcouch.github.io/clipal/reference/dot-stash_last_cli_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save most recent results to search path — .stash_last_cli_pal","text":"","code":".stash_last_cli_pal(x)"},{"path":"https://simonpcouch.github.io/clipal/reference/dot-stash_last_cli_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save most recent results to search path — .stash_last_cli_pal","text":"x cli pal.","code":""},{"path":"https://simonpcouch.github.io/clipal/reference/dot-stash_last_cli_pal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save most recent results to search path — .stash_last_cli_pal","text":"NULL, invisibly.","code":""},{"path":"https://simonpcouch.github.io/clipal/reference/dot-stash_last_cli_pal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save most recent results to search path — .stash_last_cli_pal","text":"function assign x .last_cli_pal put search path.","code":""}]
