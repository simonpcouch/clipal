% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cli_pal.R
\name{cli_pal}
\alias{cli_pal}
\title{Create a cli pal}
\usage{
cli_pal(
  fn = getOption(".clipal_fn", default = "new_chat_claude"),
  ...,
  .ns = "elmer"
)
}
\arguments{
\item{fn}{A \verb{new_*()} function, likely from the elmer package. Defaults
to \code{\link[elmer:new_chat_claude]{elmer::new_chat_claude()}}. To set a persistent alternative default,
set the \code{.clipal_fn} option; see examples below.}

\item{...}{Additional arguments to \code{fn}. The \code{system_prompt} argument will
be ignored if supplied. To set persistent defaults,
set the \code{.clipal_args} option; see examples below.}

\item{.ns}{The package that the \verb{new_*()} function is exported from.}
}
\description{
A light wrapper around elmer chat functions to create a chat object with
a custom system prompt.
}
\examples{
\dontshow{if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# to create a chat with claude:
clipal()

# or with OpenAI's 4o-mini:
clipal(
  "new_chat_openai",
  model = "gpt-4o-mini"
)

# to set OpenAI's 4o-mini as the default, for example, set the
# following options (possibly in your .Rprofile, if you'd like
# them to persist across sessions):
options(
  .clipal_fn = "new_chat_openai",
  .clipal_args = list(model = "gpt-4o-mini")
)
\dontshow{\}) # examplesIf}
}
